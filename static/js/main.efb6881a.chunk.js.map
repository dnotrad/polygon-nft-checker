{"version":3,"sources":["components/Button/style.module.scss","app.module.scss","components/Button/index.tsx","config/index.ts","config/ERC721.ts","services/wallet-connect.ts","utils/notify.tsx","context/WalletProvider.tsx","App.tsx","index.tsx"],"names":["module","exports","Button","children","onClick","className","center","buttonMarkup","cn","s","button","type","eth_provider","name","network","chainName","chainID","explorer","provider","MetaMask","ERC721_ABI","inputs","stateMutability","anonymous","indexed","internalType","outputs","MATIC_DECIMALS","WalletConnect","walletConnect","this","ConnectWallet","connect","providerType","connected","getAccounts","currentWeb3","eventSubscriber","address","Web3","eth","getBalance","balance","resetConect","data","sendTransaction","notify","msg","autoClose","options","position","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","notifyType","success","toast","info","error","Web3Context","createContext","WalletConnectContext","useState","account","setAccount","currentSubsriber","setCurrentSubscription","subscriberSuccess","useCallback","slice","subscriberError","err","console","code","resetConnect","a","window","ethereum","initWalletConnect","getAccount","accountInfo","localStorage","setItem","sub","eventSubscribe","subscribe","log","disconnect","removeItem","unsubscribe","VerifyNft","ownerAddress","contract","Contract","methods","balanceOf","call","nftAmount","useEffect","getItem","Provider","value","App","useContext","nftsAmount","setNftsAmount","handleCheckNftAmount","nfts","main","amount","root","document","getElementById","app","limit","innerWidth","ReactDOM","render"],"mappings":"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","file":"static/js/main.efb6881a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__2JL9s\",\"center\":\"style_center__2ZqC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"app_main__21vPS\",\"amount\":\"app_amount__oPi2j\"};","import { FC } from 'react';\r\nimport cn from 'classnames';\r\n\r\nimport s from './style.module.scss';\r\n\r\ninterface IProps {\r\n  onClick: () => void;\r\n  className?: string;\r\n  center?: boolean;\r\n}\r\n\r\nconst Button: FC<IProps> = ({ children, onClick, className, center }) => {\r\n  const buttonMarkup = (\r\n    <button className={cn(s.button, className)} onClick={onClick} type=\"button\">\r\n      {children}\r\n    </button>\r\n  );\r\n\r\n  if (center) return <div className={s.center}>{buttonMarkup}</div>;\r\n  return buttonMarkup;\r\n};\r\n\r\nexport default Button;\r\n","export const is_production = true;\r\nexport const polyContract = '0xA20c3F980086AC900650B02d2f8DCc59009b1156';\r\n\r\nexport const eth_provider = {\r\n  name: 'Polygon',\r\n  network: {\r\n    chainName: 'Polygon',\r\n    chainID: is_production ? 137 : 80001,\r\n  },\r\n  explorer: is_production ? 'https://explorer.matic.network/' : 'https://mumbai.polygonscan.com/',\r\n  provider: {\r\n    MetaMask: { name: 'MetaMask' },\r\n  },\r\n};\r\n","export const ERC721_ABI = [\r\n  { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\r\n      { indexed: true, internalType: 'address', name: 'approved', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'owner', type: 'address' },\r\n      { indexed: true, internalType: 'address', name: 'operator', type: 'address' },\r\n      { indexed: false, internalType: 'bool', name: 'approved', type: 'bool' },\r\n    ],\r\n    name: 'ApprovalForAll',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },\r\n      { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      { indexed: true, internalType: 'address', name: 'from', type: 'address' },\r\n      { indexed: true, internalType: 'address', name: 'to', type: 'address' },\r\n      { indexed: true, internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'addressMintedBalance',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  { inputs: [], name: 'airdrop', outputs: [], stateMutability: 'nonpayable', type: 'function' },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'airdropAddresses',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'airdropCount',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\r\n    name: 'balanceOf',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'cost',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'getApproved',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'hiddenMetadataUri',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'owner', type: 'address' },\r\n      { internalType: 'address', name: 'operator', type: 'address' },\r\n    ],\r\n    name: 'isApprovedForAll',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_user', type: 'address' }],\r\n    name: 'isWhitelisted',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'maxMintAmountPerTx',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'maxSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_mintAmount', type: 'uint256' }],\r\n    name: 'mint',\r\n    outputs: [],\r\n    stateMutability: 'payable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'nftPerAddressLimit',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'onlyWhitelisted',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: 'tokenId', type: 'uint256' }],\r\n    name: 'ownerOf',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'paused',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'payments',\r\n    outputs: [{ internalType: 'address payable', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    name: 'processedAirdrops',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'revealed',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n      { internalType: 'bytes', name: '_data', type: 'bytes' },\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address[]', name: '_users', type: 'address[]' }],\r\n    name: 'setAirdropUsers',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'operator', type: 'address' },\r\n      { internalType: 'bool', name: 'approved', type: 'bool' },\r\n    ],\r\n    name: 'setApprovalForAll',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_cost', type: 'uint256' }],\r\n    name: 'setCost',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'string', name: '_hiddenMetadataUri', type: 'string' }],\r\n    name: 'setHiddenMetadataUri',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_maxMintAmountPerTx', type: 'uint256' }],\r\n    name: 'setMaxMintAmountPerTx',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_limit', type: 'uint256' }],\r\n    name: 'setNftPerAddressLimit',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bool', name: '_state', type: 'bool' }],\r\n    name: 'setOnlyWhitelisted',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bool', name: '_state', type: 'bool' }],\r\n    name: 'setPaused',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_payable', type: 'address' }],\r\n    name: 'setPayable',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bool', name: '_state', type: 'bool' }],\r\n    name: 'setRevealed',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'string', name: '_uriPrefix', type: 'string' }],\r\n    name: 'setUriPrefix',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'string', name: '_uriSuffix', type: 'string' }],\r\n    name: 'setUriSuffix',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address[]', name: '_users', type: 'address[]' }],\r\n    name: 'setWhitelistedUsers',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\r\n    name: 'supportsInterface',\r\n    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '_tokenId', type: 'uint256' }],\r\n    name: 'tokenURI',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      { internalType: 'address', name: 'from', type: 'address' },\r\n      { internalType: 'address', name: 'to', type: 'address' },\r\n      { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'uriPrefix',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'uriSuffix',\r\n    outputs: [{ internalType: 'string', name: '', type: 'string' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'address', name: '_owner', type: 'address' }],\r\n    name: 'walletOfOwner',\r\n    outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\r\n    name: 'whitelistedAddresses',\r\n    outputs: [{ internalType: 'address', name: '', type: 'address' }],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  { inputs: [], name: 'withdraw', outputs: [], stateMutability: 'nonpayable', type: 'function' },\r\n];\r\n","import { ConnectWallet } from '@amfi/connect-wallet';\r\nimport Web3 from 'web3';\r\n\r\nimport { eth_provider } from 'config';\r\n\r\ninterface ISendTxProps {\r\n  from: string;\r\n  to: string;\r\n  value: string;\r\n}\r\n\r\nconst MATIC_DECIMALS = 10 ** 18;\r\nclass WalletConnect {\r\n  public walletConnect: ConnectWallet;\r\n\r\n  constructor() {\r\n    this.walletConnect = new ConnectWallet();\r\n  }\r\n\r\n  public async initWalletConnect(provider: 'MetaMask') {\r\n    const connected = await this.walletConnect.connect(\r\n      eth_provider.provider[provider],\r\n      eth_provider.network,\r\n      { providerType: true },\r\n    );\r\n    return connected;\r\n  }\r\n\r\n  public async getAccount() {\r\n    return this.walletConnect.getAccounts();\r\n  }\r\n\r\n  public Web3(): Web3 {\r\n    return this.walletConnect.currentWeb3();\r\n  }\r\n\r\n  public eventSubscribe() {\r\n    return this.walletConnect.eventSubscriber();\r\n  }\r\n\r\n  public async getMaticBalance(address: string) {\r\n    const balance = await this.Web3().eth.getBalance(address);\r\n    return +balance / MATIC_DECIMALS;\r\n  }\r\n\r\n  public resetConnect() {\r\n    this.walletConnect.resetConect();\r\n  }\r\n\r\n  public async sendTx(data: ISendTxProps) {\r\n    return this.Web3().eth.sendTransaction(data);\r\n  }\r\n}\r\n\r\nexport default new WalletConnect();\r\n","import { ReactElement } from 'react';\r\nimport { toast, ToastOptions } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport const notify = (\r\n  msg: string | ReactElement<any, any>,\r\n  type: 'success' | 'info' | 'error' = 'info',\r\n  autoClose = 5000,\r\n  onClick?: any,\r\n) => {\r\n  const options = {\r\n    position: 'top-left',\r\n    autoClose: 5000,\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined,\r\n    theme: 'dark',\r\n    className: 'notif-custom-css',\r\n  } as ToastOptions;\r\n\r\n  const notifyType = {\r\n    success: () => toast.success(msg, { ...options, autoClose, onClick }),\r\n    info: () => toast.info(msg, { ...options, autoClose, onClick }),\r\n    error: () => toast.error(msg, { ...options, autoClose, onClick }),\r\n  };\r\n\r\n  notifyType[type]();\r\n};\r\n","import { createContext, FC, useCallback, useContext, useEffect, useState } from 'react';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { eth_provider, polyContract } from 'config';\r\nimport { ERC721_ABI } from 'config/ERC721';\r\n\r\nimport WalletConnect from '../services/wallet-connect';\r\n\r\nimport { notify } from '../utils/notify';\r\n\r\ntype IProviders = 'MetaMask';\r\n\r\ndeclare const window: any;\r\ninterface IContextValue {\r\n  connect: (provider: IProviders) => Promise<void>;\r\n  disconnect: () => void;\r\n  account: any;\r\n  VerifyNft: (address: string) => Promise<number | string>;\r\n}\r\n\r\nconst Web3Context = createContext({} as IContextValue);\r\n\r\nconst WalletConnectContext: FC = ({ children }) => {\r\n  const [account, setAccount] = useState<any>();\r\n  const [currentSubsriber, setCurrentSubscription] = useState<Subscription>();\r\n\r\n  const subscriberSuccess = useCallback((data: any) => {\r\n    if (data.name === 'accountsChanged') {\r\n      setAccount(data);\r\n      notify(`Wallet changed: ${data.address.slice(0, 5)}...${data.address.slice(-5)}`);\r\n    }\r\n  }, []);\r\n\r\n  const subscriberError = useCallback((err: any) => {\r\n    console.error(err);\r\n    if (err.code === 4) {\r\n      WalletConnect.resetConnect();\r\n      notify(\r\n        `You changed to wrong network. Please choose ${eth_provider.network.chainName}`,\r\n        'error',\r\n      );\r\n      setAccount({});\r\n    }\r\n  }, []);\r\n\r\n  const connect = useCallback(\r\n    async (provider: IProviders) => {\r\n      if (provider === 'MetaMask' && !window.ethereum) {\r\n        notify('Please install MetaMask!', 'error');\r\n      }\r\n      const connected = await WalletConnect.initWalletConnect(provider);\r\n      if (connected) {\r\n        try {\r\n          const accountInfo: any = await WalletConnect.getAccount();\r\n          notify(\r\n            `Wallet connected: ${accountInfo.address.slice(0, 5)}...${accountInfo.address.slice(\r\n              -5,\r\n            )}`,\r\n            'success',\r\n          );\r\n          if (accountInfo.address) {\r\n            setAccount(accountInfo);\r\n            localStorage.setItem('providerType', accountInfo.type);\r\n          }\r\n\r\n          const sub = WalletConnect.eventSubscribe().subscribe(subscriberSuccess, subscriberError);\r\n          setCurrentSubscription(sub);\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n    },\r\n    [subscriberError, subscriberSuccess],\r\n  );\r\n\r\n  const disconnect = useCallback(() => {\r\n    setAccount({});\r\n    localStorage.removeItem('providerType');\r\n    currentSubsriber?.unsubscribe();\r\n    WalletConnect.resetConnect();\r\n  }, [currentSubsriber]);\r\n\r\n  const VerifyNft = useCallback(async (ownerAddress: string): Promise<number | string> => {\r\n    const Web3 = WalletConnect.Web3();\r\n    const contract = new Web3.eth.Contract(ERC721_ABI as any[], polyContract);\r\n\r\n    const nftAmount = await contract.methods.balanceOf(ownerAddress).call();\r\n    notify(`Your nfts amount: ${nftAmount}`);\r\n\r\n    return nftAmount;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // connect user if he connected previously\r\n    const providerType = localStorage.getItem('providerType') as IProviders;\r\n    if (providerType) {\r\n      connect(providerType);\r\n    }\r\n  }, [connect]);\r\n\r\n  return (\r\n    <Web3Context.Provider value={{ connect, account, disconnect, VerifyNft }}>\r\n      {children}\r\n    </Web3Context.Provider>\r\n  );\r\n};\r\n\r\nconst useWcContext = () => {\r\n  return useContext(Web3Context);\r\n};\r\n\r\nexport { WalletConnectContext, useWcContext };\r\n","import { FC, useCallback, useEffect, useState } from 'react';\r\nimport { Button } from 'components';\r\n\r\nimport { useWcContext } from './context/WalletProvider';\r\n\r\nimport './styles/index.scss';\r\nimport s from './app.module.scss';\r\n\r\nexport const App: FC = () => {\r\n  const { connect, VerifyNft, account } = useWcContext();\r\n  const [nftsAmount, setNftsAmount] = useState<string | number>('');\r\n\r\n  const handleCheckNftAmount = useCallback(async () => {\r\n    if (!account?.address) {\r\n      await connect('MetaMask');\r\n    }\r\n\r\n    const nfts = await VerifyNft(account.address);\r\n    if (+nfts === 0) {\r\n      setNftsAmount('None held');\r\n    } else {\r\n      setNftsAmount(nfts);\r\n    }\r\n  }, [account, VerifyNft, connect]);\r\n\r\n  useEffect(() => {\r\n    if (account?.address) {\r\n      handleCheckNftAmount();\r\n    }\r\n  }, [account, handleCheckNftAmount]);\r\n\r\n  return (\r\n    <>\r\n      <main className={s.main}>\r\n        <Button onClick={handleCheckNftAmount}>Verify nft</Button>\r\n        <div className={s.amount}>\r\n          Nfts amount: {account?.address ? nftsAmount : 'Connect to check'}\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n","import ReactDOM from 'react-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nimport { App } from './App';\r\nimport { WalletConnectContext } from './context/WalletProvider';\r\n\r\nconst root = document.getElementById('root');\r\nconst app = (\r\n  <WalletConnectContext>\r\n    <ToastContainer limit={window.innerWidth <= 600 ? 2 : 3} />\r\n    <App />\r\n  </WalletConnectContext>\r\n);\r\n\r\nReactDOM.render(app, root);\r\n"],"sourceRoot":""}